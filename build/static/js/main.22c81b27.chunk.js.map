{"version":3,"sources":["logo.svg","components/listeners/Listeners.js","components/artists/Artists.js","components/about/About.js","App.js","reportWebVitals.js","index.js"],"names":["Listeners","useState","category","setCategory","loading","setLoading","recommendedKnnSongs","setRecommendedKnnSongs","recommendedGmmSongs","setRecommendedGmmSongs","songsFetched","setSongsFetched","search","setSearch","numRecs","setNumRecs","handleClick","a","fetch","then","res","json","recommendations","knn","gmm","name","artist","className","TextField","label","id","onChange","e","target","value","marginRight","color","variant","stylee","marginLeft","width","FormControl","InputLabel","Select","style","minWidth","labelId","defa","MenuItem","Button","onClick","map","recommendation","i","href","url","alt","src","cover","Artists","About","App","to","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22c81b27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState,useEffect} from 'react';\r\n\r\nimport { TextField, Button, Grid, Item, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\r\n\r\n\r\nfunction Listeners() {\r\n\r\n    const [category,setCategory] = useState(0)\r\n    const [loading,setLoading] = useState(false)\r\n\r\n    const [recommendedKnnSongs,setRecommendedKnnSongs] = useState([])\r\n    const [recommendedGmmSongs,setRecommendedGmmSongs] = useState([])\r\n    const [songsFetched,setSongsFetched] = useState(false)\r\n    const [search, setSearch] = useState([])\r\n    const [numRecs, setNumRecs] = useState(3)\r\n\r\n\r\n    const handleClick = async() => {\r\n        setLoading(true)\r\n        setSongsFetched(false)\r\n\r\n        fetch('/backend/getRecommendations?songName='+search+\"&category=\"+category+\"&numRecs=\"+numRecs)\r\n        .then(res => res.json()).then(res => {\r\n            setRecommendedKnnSongs(res.recommendations.knn)\r\n            setRecommendedGmmSongs(res.recommendations.gmm)\r\n            setSearch(res.name + ' - ' + res.artist)\r\n            setSongsFetched(true)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    function handleCatChange(e) {\r\n        setCategory(e.target.value)\r\n    }\r\n\r\n\r\n    function handleSearchChange(e) {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    function handleNumRecsChange(e) {\r\n        setNumRecs(e.target.value)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <h1 className=\"listenersHeader\"> Listeners </h1>\r\n          <div className=\"songSearch\">\r\n            \r\n            <h2>Enter a Song You Like and a Category for Recommendations!</h2>\r\n\r\n\r\n            <div className=\"songInput\"> \r\n            {/* <Grid className = \"input\" container spacing = {2}> */}\r\n                {/* <Grid className=\"d-flex\" item xs > */}\r\n                    <div className = \"songNameInput\">\r\n                        <TextField label = \"Enter a Song\" id=\"outlined-basic\" onChange={handleSearchChange} value={search} marginRight=\"2px\" color =\"success\" variant=\"outlined\" />\r\n\r\n                    </div>\r\n                    <div className = \"numRecsInput\">\r\n                        <TextField label = \"# of Recs\" id=\"outlined-basic\" onChange={handleNumRecsChange} value={numRecs} stylee = {{ marginLeft: 2, width: 30, marginRight : 2}} color =\"success\" variant=\"outlined\" />\r\n\r\n                    </div>\r\n\r\n                {/* </Grid> */}\r\n                {/* <Grid  className=\"d-flex\" marginLeft=\"2px\" item xs> */}\r\n                    <FormControl>\r\n                    <InputLabel color= \"success\" id=\"demo-simple-select-label\">Category</InputLabel>\r\n                    <Select\r\n                        style={{minWidth: 130, marginLeft: 10}}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={category}\r\n                        onChange={handleCatChange}\r\n                        color = \"success\"\r\n                        label= \"Category\"\r\n                        defa\r\n                    >\r\n                        <MenuItem value={0}>All</MenuItem>\r\n                        <MenuItem value={1}>Acoustic</MenuItem>\r\n                        <MenuItem value={2}>Chill</MenuItem>\r\n                        <MenuItem value={3}>Dance</MenuItem>\r\n                        <MenuItem value={4}>Happy</MenuItem>\r\n                        <MenuItem value={5}>Loud</MenuItem>\r\n                        <MenuItem value={6}>A Capella</MenuItem>\r\n                        <MenuItem value={7}>Alternative</MenuItem>\r\n                        <MenuItem value={8}>Blues</MenuItem>\r\n                        <MenuItem value={9}>Classical</MenuItem>\r\n                        <MenuItem value={10}>Country</MenuItem>\r\n                        <MenuItem value={11}>Dance</MenuItem>\r\n                        <MenuItem value={12}>Electronic</MenuItem>\r\n                        <MenuItem value={13}>Folk</MenuItem>\r\n                        <MenuItem value={14}>Hip-Hop</MenuItem>\r\n                        <MenuItem value={15}>Indie</MenuItem>\r\n                        <MenuItem value={16}>Jazz</MenuItem>\r\n                        <MenuItem value={17}>Movie</MenuItem>\r\n                        <MenuItem value={18}>Opera</MenuItem>\r\n                        <MenuItem value={19}>Pop</MenuItem>\r\n                        <MenuItem value={20}>RnB</MenuItem>\r\n                        <MenuItem value={21}>Rap</MenuItem>\r\n                        <MenuItem value={22}>Reggae</MenuItem>\r\n                        <MenuItem value={23}>Reggaeton</MenuItem>\r\n                        <MenuItem value={24}>Rock</MenuItem>\r\n                        <MenuItem value={25}>Ska</MenuItem>\r\n                        <MenuItem value={26}>Soul</MenuItem>\r\n                        <MenuItem value={27}>Soundtrack</MenuItem>\r\n                        <MenuItem value={28}>World</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n                    <Button className = \"inputSongSearch\" onClick= {handleClick} variant=\"contained\" color = \"success\">Get Similar Songs</Button>\r\n                {/* </Grid>\r\n            </Grid> */}\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"recommendedSongs\">\r\n              {\r\n                  loading && (\r\n                    <div className = \"spinner\"></div>\r\n                  )\r\n              }\r\n              {songsFetched && (\r\n                  <div>\r\n                      <h3>Our Recommendations:</h3>\r\n                      <div className = 'recs'>\r\n                    \r\n                        <div className = 'knn'>\r\n                            <h4>kNN:</h4>\r\n                            {recommendedKnnSongs.map((recommendation,i) => {\r\n                                return (\r\n                                    <div className = 'songRecommendation'>\r\n                                        <a href = {recommendation.url}>{recommendation.name + \" - \" + recommendation.artist}</a>\r\n                                        <img className = 'albumCover' alt ='' src = {recommendation.cover}></img>\r\n                                    </div>\r\n                                )\r\n                                })}\r\n                            </div>\r\n                            <div className = 'gmm'>\r\n                            <h4>GMM:</h4>\r\n\r\n                            \r\n                            {recommendedGmmSongs.map((recommendation,i) => {\r\n                                return (\r\n                                    <div className = 'songRecommendation'>\r\n                                        <a href = {recommendation.url}>{recommendation.name + \" - \" + recommendation.artist}</a>\r\n                                        <img className = 'albumCover' alt ='' src = {recommendation.cover}></img>\r\n                                    </div>\r\n                                )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    \r\n                  </div>\r\n              )}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Listeners;\r\n  ","import React, {useState,useEffect} from 'react';\r\n\r\nimport { TextField, Button, Grid, Item, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\r\n\r\n\r\nfunction Artists() {\r\n\r\n    const [category,setCategory] = useState(0)\r\n\r\n    const [popularity,setPopularity] = useState([])\r\n    const [popularityFetched,setPopularityFetched] = useState(false)\r\n    const [search, setSearch] = useState(\"Migraine - Moonstar88\")\r\n    const [numRecs, setNumRecs] = useState(100)\r\n\r\n\r\n    // const handleClick = async() => {\r\n\r\n\r\n    //     fetch('/backend/getArtistRecommendations?songName='+search+\"&category=\"+category+\"&numRecs=\"+numRecs)\r\n    //     .then(res => res.json()).then(res => {\r\n    //         setPopularity(res.popularity)\r\n    //         setSearch(res.name + ' - ' + res.artist)\r\n    //         setPopularityFetched(true)\r\n    //         console.log(res)\r\n    //     })\r\n    // }\r\n\r\n\r\n    function handleCatChange(e) {\r\n        setCategory(e.target.value)\r\n    }\r\n\r\n\r\n    function handleSearchChange(e) {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    function handleNumRecsChange(e) {\r\n        setNumRecs(e.target.value)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <h1 className=\"listenersHeader\"> Artists </h1>\r\n          <div className=\"songSearch\">\r\n            \r\n            <h2>Enter Your Song and a Category for Popularity Tips!</h2>\r\n\r\n\r\n            <div className=\"songInput\"> \r\n            {/* <Grid className = \"input\" container spacing = {2}> */}\r\n                {/* <Grid className=\"d-flex\" item xs > */}\r\n                    <div className = \"songNameInput\">\r\n                        <TextField label = \"Enter a Song\" id=\"outlined-basic\" onChange={handleSearchChange} value={search} marginRight=\"2px\" color =\"success\" variant=\"outlined\" />\r\n\r\n                    </div>\r\n                    <div className = \"numRecsInput\">\r\n                        <TextField label = \"# of Songs to Compare\" id=\"outlined-basic\"  onChange={handleNumRecsChange} value={numRecs} style = {{width: 150,marginLeft: 2,marginRight : 2}} color =\"success\" variant=\"outlined\" />\r\n\r\n                    </div>\r\n\r\n                {/* </Grid> */}\r\n                {/* <Grid  className=\"d-flex\" marginLeft=\"2px\" item xs> */}\r\n                    <FormControl>\r\n                    <InputLabel color= \"success\" id=\"demo-simple-select-label\">Category</InputLabel>\r\n                    <Select\r\n                        style={{minWidth: 130, marginLeft: 10}}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={category}\r\n                        onChange={handleCatChange}\r\n                        color = \"success\"\r\n                        label= \"Category\"\r\n                        defa\r\n                    >\r\n                        <MenuItem value={0}>All</MenuItem>\r\n                        <MenuItem value={1}>Acoustic</MenuItem>\r\n                        <MenuItem value={2}>Chill</MenuItem>\r\n                        <MenuItem value={3}>Dance</MenuItem>\r\n                        <MenuItem value={4}>Happy</MenuItem>\r\n                        <MenuItem value={5}>Loud</MenuItem>\r\n                        <MenuItem value={6}>A Capella</MenuItem>\r\n                        <MenuItem value={7}>Alternative</MenuItem>\r\n                        <MenuItem value={8}>Blues</MenuItem>\r\n                        <MenuItem value={9}>Classical</MenuItem>\r\n                        <MenuItem value={10}>Country</MenuItem>\r\n                        <MenuItem value={11}>Dance</MenuItem>\r\n                        <MenuItem value={12}>Electronic</MenuItem>\r\n                        <MenuItem value={13}>Folk</MenuItem>\r\n                        <MenuItem value={14}>Hip-Hop</MenuItem>\r\n                        <MenuItem value={15}>Indie</MenuItem>\r\n                        <MenuItem value={16}>Jazz</MenuItem>\r\n                        <MenuItem value={17}>Movie</MenuItem>\r\n                        <MenuItem value={18}>Opera</MenuItem>\r\n                        <MenuItem value={19}>Pop</MenuItem>\r\n                        <MenuItem value={20}>RnB</MenuItem>\r\n                        <MenuItem value={21}>Rap</MenuItem>\r\n                        <MenuItem value={22}>Reggae</MenuItem>\r\n                        <MenuItem value={23}>Reggaeton</MenuItem>\r\n                        <MenuItem value={24}>Rock</MenuItem>\r\n                        <MenuItem value={25}>Ska</MenuItem>\r\n                        <MenuItem value={26}>Soul</MenuItem>\r\n                        <MenuItem value={27}>Soundtrack</MenuItem>\r\n                        <MenuItem value={28}>World</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n                    <Button className = \"inputSongSearch\" variant=\"contained\" color = \"success\">Get Popularity Projection</Button>\r\n                {/* </Grid>\r\n            </Grid> */}\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"popularity\">\r\n              {/* {popularityFetched && (\r\n                  <h3 className = \"popularityNum\">{popularity}</h3>\r\n              )} */}\r\n              <h2 className = \"popularityNum\">Projected Popularity (out of 100): 48.99</h2>\r\n              <div className = \"popularityDemoImages\">\r\n                <img className = \"popularityFeatures\" src = \"https://i.imgur.com/4yjjc0s.png\" ></img>\r\n                {/* <img className = \"popularityFeatures\" src = \"https://i.imgur.com/aDrfwjT.png\" ></img> */}\r\n\r\n              </div>\r\n\r\n          </div>\r\n\r\n          <footer>* This is a non-functional example page. \r\n                While we have implemented a working version of this page, \r\n                it would require an expensive paid tier of web hosting to support the resources our models need.</footer>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Artists;\r\n  ","import React, {useState,useEffect} from 'react';\r\n\r\nimport { TextField, Button, Grid, Item, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\r\n\r\n\r\nfunction About() {\r\n    return (\r\n        <div className = \"about\">\r\n            <h1>About</h1>\r\n            <p className = \"about\">This application was built to help music listeners find music similar to the songs that they love, and to help music creators predict the success of their songs and learn how they can make them more popular!</p>\r\n            <h1>User Guide</h1>\r\n            <p className = \"about\">Select the \"Listeners\" tab to get music recommendations. All you need to do is specify a song you like, the category of songs you want to receive recommendations from, and how many recommendations you want!</p>\r\n            <p className = \"about\">Select the \"Artists\" tab to get a popularity prediction for your song, and compare your song to other popular songs of the category you choose!</p>\r\n            <h1>About Us</h1>\r\n            <p className = \"about\">This website and all machine learning models were built by Irpan Yierpan (Rice '23) and Keifer Convertino (Rice '22) for our class DSCI 303 (Machine Learning).</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import logo from './logo.svg';\nimport { BrowserRouter, Link, Routes, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Listeners from './components/listeners/Listeners'\nimport Artists from './components/artists/Artists';\nimport About from './components/about/About';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        \n        <header className=\"App-header\">\n          <h1>Music Recommender</h1>\n        </header>\n          <div className=\"subheader\">\n            <div className = 'page-links'>\n              <Link className = 'App-link' to=\"/\">ABOUT</Link>\n              <Link className = 'App-link' to=\"/listeners\">LISTENERS</Link>\n              <Link className = 'App-link' to=\"/artists\">ARTISTS</Link>\n            </div>\n          </div>\n        <Routes>\n          <Route path = \"/artists\" element = {<Artists/>}> \n          </Route>\n          <Route path = \"/listeners\" element={<Listeners/>}> \n          </Route>\n          <Route path = \"/\" element={<About/>}> \n          </Route>\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}